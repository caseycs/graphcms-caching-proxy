proxy_cache_path /tmp/nginx-cache levels=1:2 keys_zone=graphcms:10m max_size=10m
                 inactive=24h use_temp_path=off;

server {
  listen      80 default_server;
  server_name _;

  location / {

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header 'Access-Control-Allow_Credentials' 'true';
      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }

    lua_need_request_body on;

    set $req_hash "";

    rewrite_by_lua_block {
      local function emptyIfNil(s)
        if s == nil then
          return ""
        end
        return s
      end

      local md5 = require 'md5'
      local req = ngx.req.get_method() .. "|" .. ngx.var.uri .. "|" .. emptyIfNil(ngx.req.get_body_data())
      ngx.var.req_hash   = md5.sumhexa(req)
    }

    proxy_pass __ENDPOINT__;
    proxy_http_version 1.1;
    proxy_ssl_server_name on;

    # Designed to work only for public read-only endpoints.
    proxy_set_header cookie "";
    proxy_set_header authorization "";

    proxy_ignore_headers "X-Accel-Expires" "Expires" "Cache-Control" "Set-Cookie" "Vary";

    proxy_hide_header Set-Cookie;
    proxy_hide_header CF-Ray;
    proxy_hide_header etag;

    proxy_cache_key "$req_hash";
    proxy_cache_methods POST;
    proxy_cache graphcms;
    proxy_cache_min_uses 1;
    proxy_cache_valid 200 __PROXY_CACHE_VALID__;
    proxy_cache_use_stale updating error timeout invalid_header http_500 http_502 http_503 http_504;

    add_header X-Cached $upstream_cache_status;
    add_header X-Key $req_hash;
  }

  location /purge {
    set $lua_purge_path "/tmp/nginx-cache";
    content_by_lua_file /etc/nginx/purge.lua;
  }
}
